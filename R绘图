#GO绘图
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(stringr)
library(dplyr)
library(clusterProfiler)
#============================================GO富集===========================================#
#数据处理：方法1（处理eggnogmapper的数据）
egg<-read.table("gene_anno_v2_r.txt",sep="\t",header=F,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8")
colnames(egg) <- c("query","Desciption","genesymbbol","GOs")
egg[egg==""]<-NA
colnames(egg)[1]<- "name"
gterms <- egg %>%
  select(name, GOs) %>%
  na.omit()
gene2go <- data.frame(term = character(),
                      gene = character())
for (row in 1:nrow(gterms)) {
  gene_terms <- str_split(gterms[row,"GOs"], ",", simplify = FALSE)[[1]]
  gene_id <- gterms[row, "name"][[1]]
  tmp <- data_frame(gene = rep(gene_id, length(gene_terms)),
                    term = gene_terms)
  gene2go <- rbind(gene2go, tmp)
}
gene2go$term <- gsub('"','',gene2go$term)#term列去除引号
head(gene2go)
write.table(gene2go, 'pa_gene.txt', sep = '\t', row.names = FALSE, quote = FALSE)

#数据处理：方法2（代替for循环）
# gene_ids <- egg$query_name
# eggnog_lines_with_go <- egg$GOs!= ""
# eggnog_lines_with_go
# eggnog_annoations_go <- str_split(egg[eggnog_lines_with_go,]$GOs, ",")
# gene_to_go <- data.frame(gene = rep(gene_ids[eggnog_lines_with_go],
#                                     times = sapply(eggnog_annoations_go, length)),
#                          term = unlist(eggnog_annoations_go))
# head(gene_to_go)

#GO富集分析
# genes <- read.delim("lnc_mRNA_targetgene.txt",header=F,skip = 1)
# names(genes) <- c("trans","gene","description","significance")
genes <- read.delim("genelist.txt",header=F,skip = 1)
names(genes) <- c("trans","gene","description","significance")
genes_down<- genes[genes$significance == "downregulated",]
genes_up<- genes[genes$significance == "upregulated",]
gene_anno <- read.table("go_mysql.txt",header = F,sep = "\t",fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8",skip = 1)
names(gene_anno) <- c("num_id","ID","Description","catalog")
#term2gene<-gene2go[c('term','gene')]
term2gene <- read.delim("pa_gene_v3.txt",header = F,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8",skip = 1)
colnames(term2gene) <- c("gene","term")
GO_rich<-enricher(gene=genes$trans, #待富集的基因列表
                  pvalueCutoff = 0.05,
                  qvalueCutoff = 0.2,
                  pAdjustMethod = "BH", #指定p值校正方法
                  TERM2GENE = term2gene[c("term","gene")],
                  TERM2NAME = gene_anno[c('ID', 'Description')])
barplot(GO_rich)
dotplot(GO_rich)
GO<- GO_rich@result
write.table(GO, 'GO_enrich_all.txt', sep = '\t', row.names = FALSE, quote = FALSE)
GO_rich_down<-enricher(gene=genes_down$trans, #待富集的基因列表
             pvalueCutoff = 0.05,
             qvalueCutoff = 0.2,
             pAdjustMethod = "BH", #指定p值校正方法
             TERM2GENE = term2gene[c("term","gene")],
             TERM2NAME = gene_anno[c('ID', 'Description')])
GO_rich_up<-enricher(gene=genes_up$trans, #待富集的基因列表
                  pvalueCutoff = 0.05,
                  qvalueCutoff = 0.2,
                  pAdjustMethod = "BH", #指定p值校正方法
                  TERM2GENE = term2gene[c("term","gene")],
                  TERM2NAME = gene_anno[c('ID', 'Description')])
GO_down<- GO_rich_down@result
GO_up <- GO_rich_up@result
barplot(GO_rich_down)
barplot(GO_rich_up)
write.table(GO_down, 'GO_enrich_down.txt', sep = '\t', row.names = FALSE, quote = FALSE)
write.table(GO_up, 'GO_enrich_up.txt', sep = '\t', row.names = FALSE, quote = FALSE)


#===========================================KEGG富集==============================================#
#数据读取与处理
genes_anno_ko <- read.delim("all_ko_anno.txt",header=F,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8")
genes_anno_ko <- genes_anno_ko[,-1]
colnames(genes_anno_ko) <- c("ko_number","A","B","C","D")
genes_ko <- read.delim("genelist.txt",header=T,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8",skip = 1)
genes_ko_back <- read.table("ko.txt",header=F,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8",skip = 1)
colnames(genes_ko_back) <- c("gene","ko_number")
#KEGG富集
kegg_rich <- enricher(gene = genes_ko$gene,
                      TERM2GENE = genes_ko_back[c("ko_number","gene")],
                      TERM2NAME = genes_anno_ko[c("ko_number", "C")],
                      pvalueCutoff = 0.05, 
                      pAdjustMethod = 'BH',
                      qvalueCutoff = 0.2, 
)
kegg <- kegg_rich@result
write.table(kegg,"kegg_富集_all.txt", sep = "\t", quote = FALSE, row.names = FALSE)
barplot(kegg_rich)
#处理画图

#========================================后续处理================================================#
#添加BP,MF,cc
GO_rich <- read.delim("GO_enrich_lncRNA_targetmRNA_all.txt",header = T,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8")
GO_rich_up <- read.delim("GO_enrich_lncRNA_targetmRNA_up.txt",header = T,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8")
GO_rich_down <- read.delim("GO_enrich_lncRNA_targetmRNA_down.txt",header = T,fill = TRUE, quote = "", na.strings = "", fileEncoding = "UTF-8")
#按照ID列，将相同的ID列后的catalog列进行合并
go_enrich <- merge(GO_rich,gene_anno[,c("ID","catalog")],by = 'ID',all.x = TRUE)
go_enrich_up <- merge(GO_rich_up,gene_anno[,c("ID","catalog")],by = 'ID',all.x = TRUE)
go_enrich_down <- merge(GO_rich_down,gene_anno[,c("ID","catalog")],by = 'ID',all.x = TRUE)
#ID转换

#输出
write.table(go_enrich, 'GO_enrich_lncRNA_targetmRNA_all.txt', sep = '\t', row.names = FALSE, quote = FALSE)
write.table(go_enrich_down, 'GO_enrich_lncRNA_targetmRNA_down.txt', sep = '\t', row.names = FALSE, quote = FALSE)
write.table(go_enrich_up, 'GO_enrich_lncRNA_targetmRNA_up.txt', sep = '\t', row.names = FALSE, quote = FALSE)


#================================================画图====================================================#
library(openxlsx)
library(ggplot2)
library(dplyr)
#====================================mRNA===================================#
rm(list = ls( ))
setwd("C:\\文件\\研究生\\组学\\转录组\\mRNA")
data_all <- read.xlsx("GO_enrich_id_all.xlsx")
data_up <- read.xlsx("GO_enrich_id_up.xlsx")
data_down <- read.xlsx("GO_enrich_id_down.xlsx")
dim(data_all)
dim(data_up)
dim(data_down)

data_up_bp <- data_up %>% filter(catalog == "biological_process") %>% top_n(10,wt= -log(pvalue,base = 10))
data_down_bp <- data_down %>% filter(catalog == "biological_process") %>% top_n(10,wt= -log(pvalue,base = 10))
#cols <- c("#2c3e50","#547b97","#6dbcdb")
#up
ggplot(data = data_up_bp, 
       aes(x= -log(pvalue,base = 10), y = reorder(Description,-log(pvalue,base = 10)))) +
  geom_bar(stat = "identity" ,width = 0.8) +
  xlab("pvalue") +
  ylab("Description") +
  labs(title = "GO_mRNA_UP") +
  geom_col(data = subset(data_up_bp, -log(pvalue, base = 10) < 3.5)
           ,color='black',linewidth=0.5 ,fill = "#8aa8b0",width =0.8) +
  geom_col(data = subset(data_up_bp, -log(pvalue, base = 10) >= 3.5)
           ,color='black',linewidth=0.5 , fill = "#547b97",width =0.8) +
  geom_col(data = subset(data_up_bp, -log(pvalue, base = 10) >= 4.5)
           ,color='black',linewidth=0.5 , fill = "#2c3e50",width =0.8) +
  theme_bw()+
  theme(axis.text.y = element_text(face = "bold", size = 11, colour = "black"))
 #scale_x_continuous(limits = c(0,6), expand = c(0, 0))

#down  
ggplot(data = data_down_bp, 
       aes(x= -log(pvalue,base = 10), y = reorder(Description,-log(pvalue,base = 10)))) +
  geom_bar(stat = "identity" ,width = 0.8) +
  xlab("pvalue") +
  ylab("Description") +
  labs(title = "GO_mRNA_down") +
  geom_col(data = subset(data_down_bp, -log(pvalue, base = 10) < 3.5)
           ,color='black',linewidth=0.5 ,fill = "#8aa8b0",width =0.8) +
  geom_col(data = subset(data_down_bp, -log(pvalue, base = 10) >= 3.5)
           ,color='black',linewidth=0.5 , fill = "#547b97",width =0.8) +
  geom_col(data = subset(data_down_bp, -log(pvalue, base = 10) >= 4.5)
           ,color='black',linewidth=0.5 , fill = "#2c3e50",width =0.8) +
  theme_bw()+
  theme(axis.text.y = element_text(face = "bold", size = 11, colour = "black"))

#===================================lncRNA========================================#
rm (list = ls())
setwd("C:\\文件\\研究生\\组学\\转录组\\lncRNA")
lncdata_all <- read.xlsx("GO_enrich_lncRNA_targetmRNA_id_all.xlsx")
lncdata_up <- read.xlsx("GO_enrich_lncRNA_targetmRNA_id_up.xlsx")
lncdata_down <- read.xlsx("GO_enrich_lncRNA_targetmRNA_id_down.xlsx")
lncdata_up_bp <- lncdata_up %>% filter(catalog == "biological_process") %>% top_n(10,wt= -log(pvalue,base = 10))
lncdata_down_bp <- lncdata_down %>% filter(catalog == "biological_process") %>% top_n(10,wt= -log(pvalue,base = 10))
#down
ggplot(data = lncdata_down_bp, 
       aes(x= -log(pvalue,base = 10), y = reorder(Description,-log(pvalue,base = 10)))) +
  geom_bar(stat = "identity" ,width = 0.8) +
  xlab("pvalue") +
  ylab("Description") +
  labs(title = "GO_lnc_down") +
  geom_col(data = subset(lncdata_down_bp, -log(pvalue, base = 10) < 3)
           ,color='black',linewidth=0.5 ,fill = "#8aa8b0",width =0.8) +
  geom_col(data = subset(lncdata_down_bp, -log(pvalue, base = 10) >= 3)
           ,color='black',linewidth=0.5 , fill = "#547b97",width =0.8) +
  geom_col(data = subset(lncdata_down_bp, -log(pvalue, base = 10) >= 4)
           ,color='black',linewidth=0.5 , fill = "#2c3e50",width =0.8) +
  theme_bw()+
  theme(axis.text.y = element_text(face = "bold", size = 11, colour = "black"))

#up
ggplot(data = lncdata_up_bp, 
       aes(x= -log(pvalue,base = 10), y = reorder(Description,-log(pvalue,base = 10)))) +
  geom_bar(stat = "identity" ,width = 0.8) +
  xlab("pvalue") +
  ylab("Description") +
  labs(title = "GO_lnc_up") +
  geom_col(data = subset(lncdata_up_bp, -log(pvalue, base = 10) < 3.5)
           ,color='black',linewidth=0.5 ,fill = "#8aa8b0",width =0.8) +
  geom_col(data = subset(lncdata_up_bp, -log(pvalue, base = 10) >= 3.5)
           ,color='black',linewidth=0.5 , fill = "#547b97",width =0.8) +
  geom_col(data = subset(lncdata_up_bp, -log(pvalue, base = 10) >= 4)
           ,color='black',linewidth=0.5 , fill = "#2c3e50",width =0.8) +
  theme_bw()+
  theme(axis.text.y = element_text(face = "bold", size = 11, colour = "black"))

#双向柱状图
install.packages("openxlsx")
library(openxlsx)
library(ggplot2)
#原始数据
rm(list = ls())
setwd("D:\\czl\\omics\\转录组\\paint")

#mRNA
#mdata <- read.xlsx("mRNA_GO_paint.xlsx")
mdata <- read.xlsx("lncRNA_go_paint_bp_r.xlsx")
mdata$group <- as.factor(mdata$group)
mdata$pvalue <- -log10(mdata$pvalue)
mdata$pvalue[mdata$sort == -1] <- -mdata$pvalue[mdata$sort == -1]
#paint
ggplot(mdata,aes(reorder(Description, pvalue),pvalue,fill=group))+
  geom_col(color = "black", linewidth = 0.6,width = 0.85)+#给条形图加边框线条/调整矩形的大小
  theme_bw()+
  theme(panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),#用于隐藏主要和次要网格线
        panel.border = element_blank(),#隐藏面板的边框
        #legend.title = element_blank(),#隐藏图例的标题
        axis.text = element_text(color="black",size=10),#设置x轴的文本
        axis.line.x = element_line(color='black',linewidth = 0.8),#设置x轴的线条
        #axis.line.y = element_line(color='black'),
        axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),#隐藏Y轴的刻度线和文本
        axis.title.x = element_text(family = "sans",face = "bold",color = "black", size = 14,hjust = 0.5),
        axis.title.y = element_text(family = "sans",face = "bold",color = "black", size = 16,hjust = 0.5),#设置x轴y轴图例文本
        plot.title = element_text(face = "bold", size = 14, color = "black", hjust = 0.5 ,vjust = 1.5)#设置图形标题的样式
        )+
  coord_flip()+#横纵轴翻转
  geom_segment(aes(y=0, yend=0,x=0,xend=20.4))+
  geom_text(data = mdata[which(mdata$pvalue>0),],aes(x=Description, y=-0.1, label=Description),
            hjust=1, size=6)+
  geom_text(data = mdata[which(mdata$pvalue<0),],aes(x=Description, y=0.1, label=Description),
            hjust=0, size=6)+
  geom_text(data = mdata[which(mdata$pvalue>0),],aes(label=Count),
            hjust=-1.1, size=6, color="black")+
  geom_text(data = mdata[which(mdata$pvalue<0),],aes(label=Count),
            hjust=2, size=6, color="black")+
  scale_fill_manual(values = c("#EA6D20","#3B6895"))+
  scale_x_discrete(expand = expansion(mult = c(0,0)))+
  #作用是设置 X 轴的扩展因子。mult = c(0,0)意味着不对X轴进行任何扩展，使得X轴的范围与数据完全对应，不留任何空白
  ggtitle("GO enrichment")+
  labs(x='Gene counts', y='pvalue')+
  scale_y_continuous(breaks = c(-6,-3,0,3,6),labels = c("-6","-3","0","3","6"),expand = c(0,0),limits = c(-8, 8))
 
 
#lncRNA
#lncdata <- read.xlsx("lncRNA_GO_paint.xlsx")
lncdata <- read.xlsx("lncRNA_GO_paint_bp.xlsx")
lncdata$group <- as.factor(lncdata$group)
lncdata$pvalue <- -log10(lncdata$pvalue)
lncdata$pvalue[lncdata$sort == -1] <- -lncdata$pvalue[lncdata$sort == -1]
#paint
ggplot(lncdata,aes(reorder(Description, pvalue),pvalue,fill=group))+
  geom_col(color = "black", linewidth = 0.6,width = 0.85)+#给条形图加边框线条/调整矩形的大小
  theme_bw()+
  theme(panel.grid.major=element_blank(),
        panel.grid.minor=element_blank(),#用于隐藏主要和次要网格线
        panel.border = element_blank(),#隐藏面板的边框
        #legend.title = element_blank(),#隐藏图例的标题
        axis.text = element_text(color="black",size=10),#设置x轴的文本
        axis.line.x = element_line(color='black',linewidth = 0.8),#设置x轴的线条
        #axis.line.y = element_line(color='black'),
        axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),#隐藏Y轴的刻度线和文本
        axis.title.x = element_text(family = "sans",face = "bold",color = "black", size = 14,hjust = 0.5),
        axis.title.y = element_text(family = "sans",face = "bold",color = "black", size = 16,hjust = 0.5),#设置x轴y轴图例文本
        plot.title = element_text(face = "bold", size = 14, color = "black", hjust = 0.5 ,vjust = 1.5)#设置图形标题的样式
  )+
  coord_flip()+#横纵轴翻转
  geom_segment(aes(y=0, yend=0,x=0,xend=20.4))+
  geom_text(data = lncdata[which(lncdata$pvalue>0),],aes(x=Description, y=-0.1, label=Description),
            hjust=1, size=4)+
  geom_text(data = lncdata[which(lncdata$pvalue<0),],aes(x=Description, y=0.1, label=Description),
            hjust=0, size=4)+
  geom_text(data = lncdata[which(lncdata$pvalue>0),],aes(label=Count),
            hjust=-1.1, size=4, color="black")+
  geom_text(data = lncdata[which(lncdata$pvalue<0),],aes(label=Count),
            hjust=2, size=4, color="black")+
  scale_fill_manual(values = c("#EA6D20","#3B6895"))+
  scale_x_discrete(expand = expansion(mult = c(0,0)))+
  #作用是设置 X 轴的扩展因子。mult = c(0,0)意味着不对X轴进行任何扩展，使得X轴的范围与数据完全对应，不留任何空白
  ggtitle("GO enrichment")+
  labs(x='Gene counts', y='pvalue')+
  scale_y_continuous(breaks = c(-6,-3,0,3,6),labels = c("-6","-3","0","3","6"),expand = c(0,0),limits = c(-6,6))

